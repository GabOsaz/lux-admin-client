{"version":3,"sources":["components/common/PageTitle.js","components/common/DashboardMetric.js","components/common/DashboardChart.js","util/index.js","util/dashboard.js","components/Dashboard.js"],"names":["PageTitle","title","className","DashboardMetric","value","icon","DashboardChart","salesData","chartLabels","map","sale","date","chartValues","amount","height","data","canvas","gradientFill","getContext","createLinearGradient","addColorStop","labels","datasets","label","borderColor","backgroundColor","options","elements","line","tension","borderWidth","point","radius","scales","yAxes","ticks","callback","toString","replace","dashboardData","bookedVenues","registeredUsers","reservedVenues","graphData","Dashboard","useState","usersNum","setUserData","useEffect","a","publicFetch","get","users","console","log","getDashboardData","faBook","faUserPlus","faCalendarDay","Card"],"mappings":"sHAAA,oBAUeA,IARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,yBAAKC,UAAU,gBACb,wBAAIA,UAAU,oCACXD,M,6GCUQE,EAZS,SAAC,GAA4B,IAA1BF,EAAyB,EAAzBA,MAAOG,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACvC,OACE,yBAAKH,UAAU,gEACb,uBAAGA,UAAU,mCACX,kBAAC,IAAD,CAAiBG,KAAMA,EAAMH,UAAU,SACtCD,GAEH,uBAAGC,UAAU,oCAAoCE,K,wBC+CxCE,EArDQ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClBC,EAAcD,EAAUE,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QACzCC,EAAcL,EAAUE,KAAI,SAAAC,GAAI,OAAIA,EAAKG,UAyB/C,OACE,kBAAC,OAAD,CACEC,OAAQ,IACRC,KA1Bc,SAAAC,GAChB,IACIC,EADQD,EAAOE,WAAW,MACPC,qBACrB,EACA,EACA,EACA,KAIF,OAFAF,EAAaG,aAAa,EAAG,yBAC7BH,EAAaG,aAAa,EAAG,wBACtB,CACLC,OAAQb,EACRc,SAAU,CACR,CACEC,MAAO,eACPC,YAAa,UACbT,KAAMH,EACNa,gBAAiBR,MAUrBS,QAAS,CACPC,SAAU,CACRC,KAAM,CACJC,QAAS,GACTC,YAAa,KAEfC,MAAO,CAAEC,OAAQ,IAEnBC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,SAAU,SAAAhC,GAAK,MC9CvB,IAAN,OD8CgDA,EC7C7CiC,WACAC,QAAQ,0BAA2B,iBCHlCC,EAAgB,CACpBC,aAAc,GACdC,gBAAiB,KACjBC,eAAgB,IAChBC,UAAW,CACT,CAAEhC,KAAM,WAAYE,OAAQ,MAC5B,CAAEF,KAAM,WAAYE,OAAQ,KAC5B,CAAEF,KAAM,WAAYE,OAAQ,MAC5B,CAAEF,KAAM,WAAYE,OAAQ,KAC5B,CAAEF,KAAM,WAAYE,OAAQ,MAC5B,CAAEF,KAAM,WAAYE,OAAQ,MAC5B,CAAEF,KAAM,WAAYE,OAAQ,KAC5B,CAAEF,KAAM,WAAYE,OAAQ,KAC5B,CAAEF,KAAM,WAAYE,OAAQ,KAC5B,CAAEF,KAAM,WAAYE,OAAQ,MAC5B,CAAEF,KAAM,WAAYE,OAAQ,KAC5B,CAAEF,KAAM,WAAYE,OAAQ,O,QCuFjB+B,UAxFG,WAAO,IAAD,EACUC,qBADV,mBACfC,EADe,KACLC,EADK,KAuCtB,OAnCAC,qBAAU,YAEc,uCAAG,8BAAAC,EAAA,+EAkBEC,IAAYC,IACjC,SAnBmB,gBAkBbpC,EAlBa,EAkBbA,KAMRgC,EAAYhC,EAAKqC,OAxBI,gDA0BrBC,QAAQC,IAAR,MA1BqB,yDAAH,qDA8BtBC,KACC,CAAET,IAGH,oCACE,kBAAC9C,EAAA,EAAD,CAAWC,MAAM,cAChBsC,EACC,oCACE,yBAAKrC,UAAU,kCACb,yBAAKA,UAAU,wCACb,kBAAC,EAAD,CACED,MAAM,0BACNG,MACEmC,EAAcC,aAEhBnC,KAAMmD,OAGV,yBAAKtD,UAAU,gDACb,kBAAC,EAAD,CACED,MAAM,mBACNG,MAAO0C,EACPzC,KAAMoD,OAGV,yBAAKvD,UAAU,wCACb,kBAAC,EAAD,CACED,MAAM,4BACNG,MACEmC,EAAcG,eAEhBrC,KAAMqD,QAIZ,yBAAKxD,UAAU,cACb,kBAACyD,EAAA,EAAD,KACGpB,GACC,kBAAC,EAAD,CACEhC,UAAWgC,EAAcI,eAOnC","file":"static/js/5.93e498a6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PageTitle = ({ title }) => (\r\n  <div className=\"my-1 sm:my-4\">\r\n    <h2 className=\"text-gray-800 font-bold text-2xl\">\r\n      {title}\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst DashboardMetric = ({ title, value, icon }) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg p-4 border-t-4 border-blue-500\">\r\n      <p className=\"text-gray-600 uppercase text-xs\">\r\n        <FontAwesomeIcon icon={icon} className=\"mr-2\" />\r\n        {title}\r\n      </p>\r\n      <p className=\"text-3xl text-blue-600 font-bold\">{value}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMetric;\r\n","import React from 'react';\r\nimport { Line as LineChart } from 'react-chartjs-2';\r\nimport { formatCurrency } from '../../util/index';\r\n\r\nconst DashboardChart = ({ salesData }) => {\r\n  const chartLabels = salesData.map(sale => sale.date);\r\n  const chartValues = salesData.map(sale => sale.amount);\r\n\r\n  const chartData = canvas => {\r\n    const ctx = canvas.getContext('2d');\r\n    var gradientFill = ctx.createLinearGradient(\r\n      0,\r\n      0,\r\n      0,\r\n      250\r\n    );\r\n    gradientFill.addColorStop(0, 'rgba(0, 97, 215, 0.3)');\r\n    gradientFill.addColorStop(1, 'rgba(0, 200, 255, 0)');\r\n    return {\r\n      labels: chartLabels,\r\n      datasets: [\r\n        {\r\n          label: 'Cash Revenue',\r\n          borderColor: '#3182ce',\r\n          data: chartValues,\r\n          backgroundColor: gradientFill\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <LineChart\r\n      height={100}\r\n      data={chartData}\r\n      options={{\r\n        elements: {\r\n          line: {\r\n            tension: 0.3,\r\n            borderWidth: 1.5\r\n          },\r\n          point: { radius: 0 }\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                callback: value => formatCurrency(value)\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DashboardChart;\r\n","export const formatCurrency = num => {\r\n  return `#${num\r\n    .toString()\r\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}`;\r\n};\r\n","const dashboardData = {\r\n  bookedVenues: 58,\r\n  registeredUsers: 5876,\r\n  reservedVenues: 123,\r\n  graphData: [\r\n    { date: 'Jan 2019', amount: 1902 },\r\n    { date: 'Feb 2019', amount: 893 },\r\n    { date: 'Mar 2019', amount: 1293 },\r\n    { date: 'Apr 2019', amount: 723 },\r\n    { date: 'May 2019', amount: 2341 },\r\n    { date: 'Jun 2019', amount: 2113 },\r\n    { date: 'Jul 2019', amount: 236 },\r\n    { date: 'Aug 2019', amount: 578 },\r\n    { date: 'Sep 2019', amount: 912 },\r\n    { date: 'Oct 2019', amount: 2934 },\r\n    { date: 'Nov 2019', amount: 345 },\r\n    { date: 'Dec 2019', amount: 782 }\r\n  ]\r\n};\r\n\r\nexport { dashboardData };\r\n","import React, {useEffect, useState} from 'react';\r\nimport PageTitle from './common/PageTitle';\r\nimport DashboardMetric from './common/DashboardMetric';\r\nimport Card from './common/Card';\r\nimport {\r\n  faBook,\r\n  faCalendarDay,\r\n  faUserPlus\r\n} from '@fortawesome/free-solid-svg-icons';\r\n// import { FetchContext } from '../context/FetchContext';\r\nimport DashboardChart from './common/DashboardChart';\r\nimport {dashboardData} from '../util/dashboard';\r\nimport { publicFetch } from '../util/fetch';\r\n//import axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [usersNum, setUserData] = useState();\r\n  //const [reservedVenues, setReservedVenues] = useState();\r\n\r\n  useEffect(() => {\r\n\r\n    const getDashboardData = async () => {\r\n      // try {\r\n      //   const [ usersData, reservedVenuesData ] = await axios.all([publicFetch.get('login'), publicFetch.get('reservedVenues')]);\r\n      //   console.log(usersData);\r\n      //   usersData && setUserData(usersData.data.users);\r\n      //   reservedVenuesData && setReservedVenues(reservedVenuesData.data.reservedVenues);\r\n      //   console.log(usersNum, reservedVenues)\r\n      // } catch (error) {\r\n      //   console.log(error.message)\r\n      // }\r\n      // axios.all([\r\n      //   publicFetch.get('login'), publicFetch.get('reservedVenues'),\r\n      // ])\r\n      // .then(response => {\r\n      //   setUserData(response[0].data.users);\r\n      //   setReservedVenues(response[1].data.reservedVenues)\r\n      // });\r\n      try {\r\n        const { data } = await publicFetch.get(\r\n          'login'\r\n        );\r\n        // const { data1 } = await publicFetch.get('reservedVenues');\r\n        // setReservedVenues(data1.reservedVenues);\r\n        // console.log(data1.reservedVenues);\r\n        setUserData(data.users);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    getDashboardData();\r\n  }, [ usersNum ]);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\" />\r\n      {dashboardData ? (\r\n        <>\r\n          <div className=\"mb-4 flex flex-col sm:flex-row\">\r\n            <div className=\"w-full sm:w-1/3 sm:mr-2 mb-4 sm:mb-0\">\r\n              <DashboardMetric\r\n                title=\"Number of booked venues\"\r\n                value={\r\n                  dashboardData.bookedVenues\r\n                }\r\n                icon={faBook}\r\n              />\r\n            </div>\r\n            <div className=\"w-full sm:w-1/3 sm:ml-2 sm:mr-2 mb-4 sm:mb-0\">\r\n              <DashboardMetric\r\n                title=\"Registered Users\"\r\n                value={usersNum}\r\n                icon={faUserPlus}\r\n              />\r\n            </div>\r\n            <div className=\"w-full sm:w-1/3 sm:ml-2 mb-4 sm:mb-0\">\r\n              <DashboardMetric\r\n                title=\"Number of reserved venues\"\r\n                value={\r\n                  dashboardData.reservedVenues\r\n                }\r\n                icon={faCalendarDay}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"w-4/4 mt-4\">\r\n            <Card>\r\n              {dashboardData && (\r\n                <DashboardChart\r\n                  salesData={dashboardData.graphData}\r\n                />\r\n              )}\r\n            </Card>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}