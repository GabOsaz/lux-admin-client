{"version":3,"sources":["components/AddCenter.js"],"names":["AddCenter","useState","creationSuccess","setCreationSuccess","creationError","setCreationError","loading","setLoading","uploadedImg","setUploadedImg","imgUpload","setImgUpload","uploadSuccess","setUploadSuccess","uploadError","setUploadError","name","setName","state","setState","city","setCity","capacity","setCapacity","parkingSpaces","setParkingSpace","location","setLocation","services","setServices","description","setDescription","style","setStyle","amenities","setAmenities","credentials","UploadImg","selectedFile","setSelectedFile","previewSource","setPreviewSource","uploading","previewFile","file","reader","FileReader","readAsDataURL","console","log","error","onloadend","result","uploadImg","base64EncodedImage","a","publicFetch","post","data","msg","uploadedResponse","secure_url","className","text","type","value","onSubmit","e","preventDefault","onerror","onChange","target","files","src","alt","height","onClick","UploadTxt","submitCredentials","message","response","inputClass","classNames","aria-label","placeholder"],"mappings":"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","file":"static/js/7.2e0aa1a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n// import { Redirect } from 'react-router-dom';\r\n// import { Form, Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport Card from './common/Card';\r\nimport Label from './common/Label';\r\n// import input from './common/input';\r\nimport FormSuccess from './common/FormSuccess';\r\nimport FormError from './common/FormError';\r\nimport GradientBar from './common/GradientBar';\r\nimport GradientButton from './common/GradientButton';\r\nimport { publicFetch } from '../util/fetch';\r\nimport classNames from 'classnames';\r\n// import { AuthContext } from '../context/AuthContext';\r\n\r\n\r\nconst AddCenter = () => {\r\n  // const authContext = useContext(AuthContext)\r\n  const [creationSuccess, setCreationSuccess] = useState();\r\n  const [creationError, setCreationError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploadedImg, setUploadedImg] = useState(null);\r\n  const [imgUpload, setImgUpload] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState();\r\n  const [uploadError, setUploadError] = useState();\r\n\r\n  const [name, setName] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [capacity, setCapacity] = useState('');\r\n  const [parkingSpaces, setParkingSpace] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [services, setServices] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [style, setStyle] = useState('');\r\n  const [amenities, setAmenities] = useState([]);\r\n\r\n  const credentials = {\r\n    name, state, city, capacity, parkingSpaces, location, services, description, style, amenities, uploadedImg\r\n  }\r\n\r\n  const UploadImg = () => {\r\n      const [selectedFile, setSelectedFile] = useState(null);\r\n      const [previewSource, setPreviewSource] = useState();\r\n      const [uploading, setLoading] = useState(false);\r\n  \r\n      const onChangeHandler = (e) => {\r\n          setSelectedFile(e.target.files[0]);\r\n          console.log(e.target.files[0]);\r\n          previewFile(e.target.files[0]);\r\n      };\r\n\r\n      const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        console.log(reader.error)\r\n        reader.onloadend = () => {\r\n          setPreviewSource(reader.result)\r\n          console.log(reader.result)\r\n        }\r\n      }\r\n\r\n      const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(!selectedFile) return;\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = () => {\r\n          uploadImg(reader.result)\r\n        }\r\n        reader.onerror = () => {\r\n          console.error('Check onSubmit function for possible error!');\r\n          setUploadError('Submit unsuccessful');\r\n        }\r\n      }\r\n  \r\n      const uploadImg = async (base64EncodedImage) => {\r\n        try {\r\n          setLoading(true);\r\n          const { data } = await publicFetch.post('fileUpload', {data: base64EncodedImage});\r\n          console.log(data);\r\n          setUploadSuccess(data.msg);\r\n          console.log(uploadSuccess)\r\n          setUploadedImg(data.uploadedResponse.secure_url);\r\n          console.log(data.uploadedResponse.secure_url);\r\n          setUploadError('');\r\n        } catch(error) {\r\n          setLoading(false);\r\n          console.error('Something went wrong');\r\n          const data  = error;\r\n          setUploadError(data.msg);\r\n          setUploadSuccess('');\r\n        }\r\n      }\r\n  \r\n      return (\r\n        <div className= 'flex justify-between'>\r\n          <section className='w-full h-screen'>  \r\n              {uploadSuccess && (\r\n                  <FormSuccess text={uploadSuccess} />\r\n              )}\r\n              {uploadError && (\r\n                  <FormError text={uploadError} />\r\n              )}\r\n              <input\r\n                  type=\"hidden\"\r\n                  name=\"remember\"\r\n                  value=\"true\"\r\n              />\r\n              <form onSubmit={onSubmitHandler}>\r\n                  <input type=\"file\" name=\"file\"  onChange={onChangeHandler}/>\r\n                  {previewSource && (\r\n                    <div>\r\n                      <img src={previewSource} alt='selected' style={{height: '300px'}}></img>\r\n                  </div>\r\n                  )}\r\n                  <div className=\"flex mt-6\">\r\n                      <span className='mr-5'><GradientButton\r\n                          type=\"submit\"\r\n                          text=\"Upload\"\r\n                          loading={uploading}\r\n                      />\r\n                      </span>\r\n                      <span><GradientButton\r\n                        type=\"text\"\r\n                        text=\"Go back\"\r\n                        onClick={() => setImgUpload(!imgUpload)}\r\n                      />\r\n                      </span>\r\n                  </div>\r\n              </form>\r\n          </section>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  const UploadTxt = () => (\r\n    <div className='text-center'>\r\n      <span className='cursor-pointer text-blue-600' onClick={() => setImgUpload(!imgUpload)}>\r\n        Upload Images\r\n      </span>\r\n    </div>\r\n  );\r\n\r\n  const submitCredentials = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await publicFetch.post('eventCenters', credentials);\r\n      // authContext.setAuthState(data);\r\n      console.log(data);\r\n      setCreationSuccess(data.message);\r\n      setLoading(false);\r\n      setCreationError('');\r\n    } catch (error) {\r\n      setLoading(false);\r\n      const { data } = error.response;\r\n      setCreationError(data.message);\r\n      setCreationSuccess('');\r\n    }\r\n  };\r\n\r\n  const inputClass = classNames({\r\n    \"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\": true\r\n})\r\n\r\n  return (\r\n    <>\r\n     {imgUpload && <UploadImg />}\r\n     {imgUpload === false &&\r\n      <section className=\"w-full h-screen m-auto p-4 sm:pt-10\">\r\n        <GradientBar />\r\n        <Card>\r\n          <div className=\"flex items-center justify-center py-3 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"max-w w-full\">\r\n              <div>\r\n                <h2 className=\"mb-2 text-center text-3xl leading-9 font-extrabold text-gray-900\">\r\n                  Add Event Center\r\n                </h2>\r\n              </div>\r\n              <div>\r\n                  <form onSubmit={submitCredentials} className=\"mt-8\">\r\n                    {creationSuccess && (\r\n                      <FormSuccess text={creationSuccess} />\r\n                    )}\r\n                    {creationError && (\r\n                      <FormError text={creationError} />\r\n                    )}\r\n                    <input\r\n                      type=\"hidden\"\r\n                      name=\"remember\"\r\n                      value=\"true\"\r\n                      className={inputClass}\r\n                    />\r\n                    <div className='w-50' >\r\n                      <div className=\"flex\">\r\n                        <div className=\"mb-2 mr-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Name of Event Center\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label='Name'\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            placeholder=\"What is it called?\"\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            value={name}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-2 ml-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"State\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"State\"\r\n                            name=\"state\"\r\n                            type=\"text\"\r\n                            placeholder=\"state\"\r\n                            onChange={(e) => setState(e.target.value)}\r\n                            value={state}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex\">\r\n                        <div className=\"mb-2 mr-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"City\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"City\"\r\n                            name=\"city\"\r\n                            type=\"text\"\r\n                            placeholder=\"which city?\"\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                            value={city}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-2 ml-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Capacity\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"Capacity\"\r\n                            name=\"capacity\"\r\n                            type=\"text\"\r\n                            placeholder=\"capacity?\"\r\n                            onChange={(e) => setCapacity(e.target.value)}\r\n                            value={capacity}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex\">\r\n                        <div className=\"mb-2 mr-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Parking Spaces\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"Parking Spaces\"\r\n                            name=\"parkingSpaces\"\r\n                            type=\"text\"\r\n                            placeholder=\"capacity of parking space available?\"\r\n                            onChange={(e) => setParkingSpace(e.target.value)}\r\n                            value={parkingSpaces}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-2 ml-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Location\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"Location\"\r\n                            name=\"location\"\r\n                            type=\"text\"\r\n                            placeholder=\"street address?\"\r\n                            onChange={(e) => setLocation(e.target.value)}\r\n                            value={location}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex\">\r\n                        <div className=\"mb-2 mr-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Services\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"Services\"\r\n                            name=\"services\"\r\n                            type=\"text\"\r\n                            placeholder=\"What services are rendered?\"\r\n                            onChange={(e) => setServices(e.target.value)}\r\n                            value={services}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-2 ml-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Description\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"Description\"\r\n                            name=\"description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"Some highlights...\"\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            value={description}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex\">\r\n                        <div className=\"mb-2 mr-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Style\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"Style\"\r\n                            name=\"style\"\r\n                            type=\"text\"\r\n                            placeholder=\"style\"\r\n                            onChange={(e) => setStyle(e.target.value)}\r\n                            value={style}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-2 ml-2 w-full\">\r\n                          <div className=\"mb-1\">\r\n                            <Label text=\"Amenities\" />\r\n                          </div>\r\n                          <input\r\n                            aria-label=\"Amenities\"\r\n                            name=\"amenities\"\r\n                            type=\"text\"\r\n                            placeholder=\"what are the available amenities?\"\r\n                            onChange={(e) => setAmenities(e.target.value)}\r\n                            value={amenities}\r\n                            className={inputClass}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-6\">\r\n                      <div><em> Note: If there are images to upload, kindly do that first by clicking 'Upload Images' below before hitting the 'Submit data' button </em></div>\r\n                      <UploadTxt />\r\n                      <GradientButton\r\n                        type=\"submit\"\r\n                        text=\"Submit data\"\r\n                        loading={loading}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </section>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCenter;\r\n"],"sourceRoot":""}